name: release

on: # @see https://help.github.com/en/articles/events-that-trigger-workflows#webhook-events
  push:
    tags:
      - "*"

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Build
        run: |
          & git log -n 10 --pretty=oneline
          New-Item -ItemType Directory -Force ~/.npm-global
          npm config set prefix "~/.npm-global"
          if ( "${{ matrix.os }}" -eq "windows-latest" ) { 
            $ENV:PATH="~/.npm-global/bin;$ENV:PATH"
          } else {
            $ENV:PATH="~/.npm-global/bin:$ENV:PATH"
          }
          if (Test-Path "out") { Remove-Item -Recurse -Force "out" }
          & npm install -g yarn
          & yarn install --registry https://registry.npmjs.org
          if ( "${{ matrix.os }}" -eq "windows-latest" ) { 
            & yarn run package-win32 --registry https://registry.npmjs.org
            cd out
            $package_list = Get-ChildItem
            foreach($package in $package_list) { 
              $package_name = $package.Name
              echo \"$package_name\"
              & 7z a -y -r "$package_name.7z" "$package_name"
            }
          } elseif ( "${{ matrix.os }}" -eq "macos-latest" ) { 
            & yarn run package-darwin --registry https://registry.npmjs.org
            cd out
            $package_list = Get-ChildItem
            foreach($package in $package_list) { 
              $package_name = $package.Name
              echo \"$package_name\"
              & tar -Jcvf "$package_name.tar.xz" "$package_name"
            }
          } else {
            & yarn run package-linux --registry https://registry.npmjs.org
            cd out
            $package_list = Get-ChildItem
            foreach($package in $package_list) { 
              $package_name = $package.Name
              echo \"$package_name\"
              & tar -Jcvf "$package_name.tar.xz" "$package_name"
            }
          }
          cd ..

        shell: pwsh
      - name: Release
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: "out/*.7z;out/*.tar.xz"
          tags: true
          draft: true
          overwrite: true
          # verbose: true
